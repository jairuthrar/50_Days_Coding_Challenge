/*
Given two strings a and b consisting of lowercase characters. The task is to check whether two given strings are an anagram of each other or not.
An anagram of a string is another string that contains the same characters,
only the order of characters can be different. For example, act and tac are an anagram of each other.
Note:-
If the strings are anagrams you have to return True or else return False
|s| represents the length of string s.
Example 1:

Input:a = geeksforgeeks, b = forgeeksgeeks
Output: YES
Explanation: Both the string have same characters with
same frequency. So, both are anagrams.*/

class Solution:
    def isAnagram(self, a, b):
        if len(a) == len(b):
            for i in a:
                flag = 0
                for j in b:
                    if i == j:
                        flag = 1
                        break
    
                if flag == 0:
                    return False
            return True
        else:
            return False

if __name__=='__main__':
    t = int(input())
    for i in range(t):
        a,b=map(str,input().strip().split())
        if(Solution().isAnagram(a,b)):
            print("YES")
        else:
            print("NO") 

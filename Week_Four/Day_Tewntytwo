/*Given an array of N integers. Write a program to check whether an arithmetic progression can be formed using all the given elements.
 

Example 1:

Input:
N=4
arr[] = { 0,12,4,8 }
Output: YES
Explanation: Rearrange given array as
{0, 4, 8, 12}  which forms an
arithmetic progression.*/ 



import java.io.*;
import java.util.*;

class Solution
{
    boolean checkIsAP(int arr[] ,int n)
    {
   
        Arrays.sort(arr);

        int diff= arr[1] - arr[0];

        for (int i = 2; i < n; i++) 
        {
            if (arr[i] - arr[i - 1] != diff)
            {
                return false;
                
            }
        }

        return true;
    }
}




class Array {

  
    public static void main (String[] args) throws IOException{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        int testcases = Integer.parseInt(br.readLine());
      
        while(testcases-- > 0){
            int n=Integer.parseInt(br.readLine());

            String line1 = br.readLine();
            String[] a1 = line1.trim().split("\\s+");
            int a[]=new int[n];
            for(int  i=0;i<n;i++)
            {
                a[i]=Integer.parseInt(a1[i]);
            }
            Solution ob=new Solution();

            boolean ans=ob.checkIsAP(a,n);
            if(ans==true)
            System.out.println("YES");
            else
            System.out.println("NO");
        }
    }
}




